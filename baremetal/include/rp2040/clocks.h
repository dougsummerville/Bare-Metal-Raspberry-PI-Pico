
/* Copyright (c) 2022-2025 Douglas H. Summerville (dsummer@binghamton.edu) 
 *
 * Created from scraped data which is Copyright (c) 2022 Raspberry Pi
 * (Trading) Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included
 * in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#ifndef RP2040_CLOCKS_H
#define RP2040_CLOCKS_H

#include <stdint.h>

#define ALL1 ((uint32_t)0xFFFFFFFF)

typedef struct{
		uint32_t clk_gpout0_ctrl;
		uint32_t clk_gpout0_div;
		uint32_t clk_gpout0_selected;
		uint32_t clk_gpout1_ctrl;
		uint32_t clk_gpout1_div;
		uint32_t clk_gpout1_selected;
		uint32_t clk_gpout2_ctrl;
		uint32_t clk_gpout2_div;
		uint32_t clk_gpout2_selected;
		uint32_t clk_gpout3_ctrl;
		uint32_t clk_gpout3_div;
		uint32_t clk_gpout3_selected;
		uint32_t clk_ref_ctrl;
		uint32_t clk_ref_div;
		uint32_t clk_ref_selected;
		uint32_t clk_sys_ctrl;
		uint32_t clk_sys_div;
		uint32_t clk_sys_selected;
		uint32_t clk_peri_ctrl;
		uint32_t RSVD0;
		uint32_t clk_peri_selected;
		uint32_t clk_usb_ctrl;
		uint32_t clk_usb_div;
		uint32_t clk_usb_selected;
		uint32_t clk_adc_ctrl;
		uint32_t clk_adc_div;
		uint32_t clk_adc_selected;
		uint32_t clk_rtc_ctrl;
		uint32_t clk_rtc_div;
		uint32_t clk_rtc_selected;
		uint32_t clk_sys_resus_ctrl;
		uint32_t clk_sys_resus_status;
		uint32_t fc0_ref_khz;
		uint32_t fc0_min_khz;
		uint32_t fc0_max_khz;
		uint32_t fc0_delay;
		uint32_t fc0_interval;
		uint32_t fc0_src;
		uint32_t fc0_status;
		uint32_t fc0_result;
		uint32_t wake_en0;
		uint32_t wake_en1;
		uint32_t sleep_en0;
		uint32_t sleep_en1;
		uint32_t enabled0;
		uint32_t enabled1;
		uint32_t intr;
		uint32_t inte;
		uint32_t intf;
		uint32_t ints;
		uint32_t RSVD1[974];
		uint32_t xor_clk_gpout0_ctrl;
		uint32_t xor_clk_gpout0_div;
		uint32_t xor_clk_gpout0_selected;
		uint32_t xor_clk_gpout1_ctrl;
		uint32_t xor_clk_gpout1_div;
		uint32_t xor_clk_gpout1_selected;
		uint32_t xor_clk_gpout2_ctrl;
		uint32_t xor_clk_gpout2_div;
		uint32_t xor_clk_gpout2_selected;
		uint32_t xor_clk_gpout3_ctrl;
		uint32_t xor_clk_gpout3_div;
		uint32_t xor_clk_gpout3_selected;
		uint32_t xor_clk_ref_ctrl;
		uint32_t xor_clk_ref_div;
		uint32_t xor_clk_ref_selected;
		uint32_t xor_clk_sys_ctrl;
		uint32_t xor_clk_sys_div;
		uint32_t xor_clk_sys_selected;
		uint32_t xor_clk_peri_ctrl;
		uint32_t RSVDxor_0;
		uint32_t xor_clk_peri_selected;
		uint32_t xor_clk_usb_ctrl;
		uint32_t xor_clk_usb_div;
		uint32_t xor_clk_usb_selected;
		uint32_t xor_clk_adc_ctrl;
		uint32_t xor_clk_adc_div;
		uint32_t xor_clk_adc_selected;
		uint32_t xor_clk_rtc_ctrl;
		uint32_t xor_clk_rtc_div;
		uint32_t xor_clk_rtc_selected;
		uint32_t xor_clk_sys_resus_ctrl;
		uint32_t xor_clk_sys_resus_status;
		uint32_t xor_fc0_ref_khz;
		uint32_t xor_fc0_min_khz;
		uint32_t xor_fc0_max_khz;
		uint32_t xor_fc0_delay;
		uint32_t xor_fc0_interval;
		uint32_t xor_fc0_src;
		uint32_t xor_fc0_status;
		uint32_t xor_fc0_result;
		uint32_t xor_wake_en0;
		uint32_t xor_wake_en1;
		uint32_t xor_sleep_en0;
		uint32_t xor_sleep_en1;
		uint32_t xor_enabled0;
		uint32_t xor_enabled1;
		uint32_t xor_intr;
		uint32_t xor_inte;
		uint32_t xor_intf;
		uint32_t xor_ints;
		uint32_t RSVDxor_1[974];
		uint32_t set_clk_gpout0_ctrl;
		uint32_t set_clk_gpout0_div;
		uint32_t set_clk_gpout0_selected;
		uint32_t set_clk_gpout1_ctrl;
		uint32_t set_clk_gpout1_div;
		uint32_t set_clk_gpout1_selected;
		uint32_t set_clk_gpout2_ctrl;
		uint32_t set_clk_gpout2_div;
		uint32_t set_clk_gpout2_selected;
		uint32_t set_clk_gpout3_ctrl;
		uint32_t set_clk_gpout3_div;
		uint32_t set_clk_gpout3_selected;
		uint32_t set_clk_ref_ctrl;
		uint32_t set_clk_ref_div;
		uint32_t set_clk_ref_selected;
		uint32_t set_clk_sys_ctrl;
		uint32_t set_clk_sys_div;
		uint32_t set_clk_sys_selected;
		uint32_t set_clk_peri_ctrl;
		uint32_t RSVDset_0;
		uint32_t set_clk_peri_selected;
		uint32_t set_clk_usb_ctrl;
		uint32_t set_clk_usb_div;
		uint32_t set_clk_usb_selected;
		uint32_t set_clk_adc_ctrl;
		uint32_t set_clk_adc_div;
		uint32_t set_clk_adc_selected;
		uint32_t set_clk_rtc_ctrl;
		uint32_t set_clk_rtc_div;
		uint32_t set_clk_rtc_selected;
		uint32_t set_clk_sys_resus_ctrl;
		uint32_t set_clk_sys_resus_status;
		uint32_t set_fc0_ref_khz;
		uint32_t set_fc0_min_khz;
		uint32_t set_fc0_max_khz;
		uint32_t set_fc0_delay;
		uint32_t set_fc0_interval;
		uint32_t set_fc0_src;
		uint32_t set_fc0_status;
		uint32_t set_fc0_result;
		uint32_t set_wake_en0;
		uint32_t set_wake_en1;
		uint32_t set_sleep_en0;
		uint32_t set_sleep_en1;
		uint32_t set_enabled0;
		uint32_t set_enabled1;
		uint32_t set_intr;
		uint32_t set_inte;
		uint32_t set_intf;
		uint32_t set_ints;
		uint32_t RSVDset_1[974];
		uint32_t clr_clk_gpout0_ctrl;
		uint32_t clr_clk_gpout0_div;
		uint32_t clr_clk_gpout0_selected;
		uint32_t clr_clk_gpout1_ctrl;
		uint32_t clr_clk_gpout1_div;
		uint32_t clr_clk_gpout1_selected;
		uint32_t clr_clk_gpout2_ctrl;
		uint32_t clr_clk_gpout2_div;
		uint32_t clr_clk_gpout2_selected;
		uint32_t clr_clk_gpout3_ctrl;
		uint32_t clr_clk_gpout3_div;
		uint32_t clr_clk_gpout3_selected;
		uint32_t clr_clk_ref_ctrl;
		uint32_t clr_clk_ref_div;
		uint32_t clr_clk_ref_selected;
		uint32_t clr_clk_sys_ctrl;
		uint32_t clr_clk_sys_div;
		uint32_t clr_clk_sys_selected;
		uint32_t clr_clk_peri_ctrl;
		uint32_t RSVDclr_0;
		uint32_t clr_clk_peri_selected;
		uint32_t clr_clk_usb_ctrl;
		uint32_t clr_clk_usb_div;
		uint32_t clr_clk_usb_selected;
		uint32_t clr_clk_adc_ctrl;
		uint32_t clr_clk_adc_div;
		uint32_t clr_clk_adc_selected;
		uint32_t clr_clk_rtc_ctrl;
		uint32_t clr_clk_rtc_div;
		uint32_t clr_clk_rtc_selected;
		uint32_t clr_clk_sys_resus_ctrl;
		uint32_t clr_clk_sys_resus_status;
		uint32_t clr_fc0_ref_khz;
		uint32_t clr_fc0_min_khz;
		uint32_t clr_fc0_max_khz;
		uint32_t clr_fc0_delay;
		uint32_t clr_fc0_interval;
		uint32_t clr_fc0_src;
		uint32_t clr_fc0_status;
		uint32_t clr_fc0_result;
		uint32_t clr_wake_en0;
		uint32_t clr_wake_en1;
		uint32_t clr_sleep_en0;
		uint32_t clr_sleep_en1;
		uint32_t clr_enabled0;
		uint32_t clr_enabled1;
		uint32_t clr_intr;
		uint32_t clr_inte;
		uint32_t clr_intf;
		uint32_t clr_ints;
		uint32_t RSVDclr_1[974];
} CLOCKS_REG_BLOCKS;

#define clocks ((CLOCKS_REG_BLOCKS volatile *)0x40008000)

/*CLK_GPOUT0_CTRL Register macros*/

#define CLOCKS_CLK_GPOUT0_CTRL_NUDGE(v) (((v)&0x1)<<20)
#define CLOCKS_CLK_GPOUT0_CTRL_NUDGE_MASK CLOCKS_CLK_GPOUT0_CTRL_NUDGE(ALL1)
#define CLOCKS_CLK_GPOUT0_CTRL_PHASE(v) (((v)&0x3)<<16)
#define CLOCKS_CLK_GPOUT0_CTRL_PHASE_MASK CLOCKS_CLK_GPOUT0_CTRL_PHASE(ALL1)
#define CLOCKS_CLK_GPOUT0_CTRL_DC50(v) (((v)&0x1)<<12)
#define CLOCKS_CLK_GPOUT0_CTRL_DC50_MASK CLOCKS_CLK_GPOUT0_CTRL_DC50(ALL1)
#define CLOCKS_CLK_GPOUT0_CTRL_ENABLE(v) (((v)&0x1)<<11)
#define CLOCKS_CLK_GPOUT0_CTRL_ENABLE_MASK CLOCKS_CLK_GPOUT0_CTRL_ENABLE(ALL1)
#define CLOCKS_CLK_GPOUT0_CTRL_KILL(v) (((v)&0x1)<<10)
#define CLOCKS_CLK_GPOUT0_CTRL_KILL_MASK CLOCKS_CLK_GPOUT0_CTRL_KILL(ALL1)
#define CLOCKS_CLK_GPOUT0_CTRL_AUXSRC(v) (((v)&0xf)<<5)
#define CLOCKS_CLK_GPOUT0_CTRL_AUXSRC_MASK CLOCKS_CLK_GPOUT0_CTRL_AUXSRC(ALL1)

/*CLK_GPOUT0_DIV Register macros*/

#define CLOCKS_CLK_GPOUT0_DIV_INT(v) (((v)&0xffffff)<<8)
#define CLOCKS_CLK_GPOUT0_DIV_INT_MASK CLOCKS_CLK_GPOUT0_DIV_INT(ALL1)
#define CLOCKS_CLK_GPOUT0_DIV_FRAC(v) (((v)&0xff)<<0)
#define CLOCKS_CLK_GPOUT0_DIV_FRAC_MASK CLOCKS_CLK_GPOUT0_DIV_FRAC(ALL1)

/*CLK_GPOUT0_SELECTED Register macros*/


/*CLK_GPOUT1_CTRL Register macros*/

#define CLOCKS_CLK_GPOUT1_CTRL_NUDGE(v) (((v)&0x1)<<20)
#define CLOCKS_CLK_GPOUT1_CTRL_NUDGE_MASK CLOCKS_CLK_GPOUT1_CTRL_NUDGE(ALL1)
#define CLOCKS_CLK_GPOUT1_CTRL_PHASE(v) (((v)&0x3)<<16)
#define CLOCKS_CLK_GPOUT1_CTRL_PHASE_MASK CLOCKS_CLK_GPOUT1_CTRL_PHASE(ALL1)
#define CLOCKS_CLK_GPOUT1_CTRL_DC50(v) (((v)&0x1)<<12)
#define CLOCKS_CLK_GPOUT1_CTRL_DC50_MASK CLOCKS_CLK_GPOUT1_CTRL_DC50(ALL1)
#define CLOCKS_CLK_GPOUT1_CTRL_ENABLE(v) (((v)&0x1)<<11)
#define CLOCKS_CLK_GPOUT1_CTRL_ENABLE_MASK CLOCKS_CLK_GPOUT1_CTRL_ENABLE(ALL1)
#define CLOCKS_CLK_GPOUT1_CTRL_KILL(v) (((v)&0x1)<<10)
#define CLOCKS_CLK_GPOUT1_CTRL_KILL_MASK CLOCKS_CLK_GPOUT1_CTRL_KILL(ALL1)
#define CLOCKS_CLK_GPOUT1_CTRL_AUXSRC(v) (((v)&0xf)<<5)
#define CLOCKS_CLK_GPOUT1_CTRL_AUXSRC_MASK CLOCKS_CLK_GPOUT1_CTRL_AUXSRC(ALL1)

/*CLK_GPOUT1_DIV Register macros*/

#define CLOCKS_CLK_GPOUT1_DIV_INT(v) (((v)&0xffffff)<<8)
#define CLOCKS_CLK_GPOUT1_DIV_INT_MASK CLOCKS_CLK_GPOUT1_DIV_INT(ALL1)
#define CLOCKS_CLK_GPOUT1_DIV_FRAC(v) (((v)&0xff)<<0)
#define CLOCKS_CLK_GPOUT1_DIV_FRAC_MASK CLOCKS_CLK_GPOUT1_DIV_FRAC(ALL1)

/*CLK_GPOUT1_SELECTED Register macros*/


/*CLK_GPOUT2_CTRL Register macros*/

#define CLOCKS_CLK_GPOUT2_CTRL_NUDGE(v) (((v)&0x1)<<20)
#define CLOCKS_CLK_GPOUT2_CTRL_NUDGE_MASK CLOCKS_CLK_GPOUT2_CTRL_NUDGE(ALL1)
#define CLOCKS_CLK_GPOUT2_CTRL_PHASE(v) (((v)&0x3)<<16)
#define CLOCKS_CLK_GPOUT2_CTRL_PHASE_MASK CLOCKS_CLK_GPOUT2_CTRL_PHASE(ALL1)
#define CLOCKS_CLK_GPOUT2_CTRL_DC50(v) (((v)&0x1)<<12)
#define CLOCKS_CLK_GPOUT2_CTRL_DC50_MASK CLOCKS_CLK_GPOUT2_CTRL_DC50(ALL1)
#define CLOCKS_CLK_GPOUT2_CTRL_ENABLE(v) (((v)&0x1)<<11)
#define CLOCKS_CLK_GPOUT2_CTRL_ENABLE_MASK CLOCKS_CLK_GPOUT2_CTRL_ENABLE(ALL1)
#define CLOCKS_CLK_GPOUT2_CTRL_KILL(v) (((v)&0x1)<<10)
#define CLOCKS_CLK_GPOUT2_CTRL_KILL_MASK CLOCKS_CLK_GPOUT2_CTRL_KILL(ALL1)
#define CLOCKS_CLK_GPOUT2_CTRL_AUXSRC(v) (((v)&0xf)<<5)
#define CLOCKS_CLK_GPOUT2_CTRL_AUXSRC_MASK CLOCKS_CLK_GPOUT2_CTRL_AUXSRC(ALL1)

/*CLK_GPOUT2_DIV Register macros*/

#define CLOCKS_CLK_GPOUT2_DIV_INT(v) (((v)&0xffffff)<<8)
#define CLOCKS_CLK_GPOUT2_DIV_INT_MASK CLOCKS_CLK_GPOUT2_DIV_INT(ALL1)
#define CLOCKS_CLK_GPOUT2_DIV_FRAC(v) (((v)&0xff)<<0)
#define CLOCKS_CLK_GPOUT2_DIV_FRAC_MASK CLOCKS_CLK_GPOUT2_DIV_FRAC(ALL1)

/*CLK_GPOUT2_SELECTED Register macros*/


/*CLK_GPOUT3_CTRL Register macros*/

#define CLOCKS_CLK_GPOUT3_CTRL_NUDGE(v) (((v)&0x1)<<20)
#define CLOCKS_CLK_GPOUT3_CTRL_NUDGE_MASK CLOCKS_CLK_GPOUT3_CTRL_NUDGE(ALL1)
#define CLOCKS_CLK_GPOUT3_CTRL_PHASE(v) (((v)&0x3)<<16)
#define CLOCKS_CLK_GPOUT3_CTRL_PHASE_MASK CLOCKS_CLK_GPOUT3_CTRL_PHASE(ALL1)
#define CLOCKS_CLK_GPOUT3_CTRL_DC50(v) (((v)&0x1)<<12)
#define CLOCKS_CLK_GPOUT3_CTRL_DC50_MASK CLOCKS_CLK_GPOUT3_CTRL_DC50(ALL1)
#define CLOCKS_CLK_GPOUT3_CTRL_ENABLE(v) (((v)&0x1)<<11)
#define CLOCKS_CLK_GPOUT3_CTRL_ENABLE_MASK CLOCKS_CLK_GPOUT3_CTRL_ENABLE(ALL1)
#define CLOCKS_CLK_GPOUT3_CTRL_KILL(v) (((v)&0x1)<<10)
#define CLOCKS_CLK_GPOUT3_CTRL_KILL_MASK CLOCKS_CLK_GPOUT3_CTRL_KILL(ALL1)
#define CLOCKS_CLK_GPOUT3_CTRL_AUXSRC(v) (((v)&0xf)<<5)
#define CLOCKS_CLK_GPOUT3_CTRL_AUXSRC_MASK CLOCKS_CLK_GPOUT3_CTRL_AUXSRC(ALL1)

/*CLK_GPOUT3_DIV Register macros*/

#define CLOCKS_CLK_GPOUT3_DIV_INT(v) (((v)&0xffffff)<<8)
#define CLOCKS_CLK_GPOUT3_DIV_INT_MASK CLOCKS_CLK_GPOUT3_DIV_INT(ALL1)
#define CLOCKS_CLK_GPOUT3_DIV_FRAC(v) (((v)&0xff)<<0)
#define CLOCKS_CLK_GPOUT3_DIV_FRAC_MASK CLOCKS_CLK_GPOUT3_DIV_FRAC(ALL1)

/*CLK_GPOUT3_SELECTED Register macros*/


/*CLK_REF_CTRL Register macros*/

#define CLOCKS_CLK_REF_CTRL_AUXSRC(v) (((v)&0x3)<<5)
#define CLOCKS_CLK_REF_CTRL_AUXSRC_MASK CLOCKS_CLK_REF_CTRL_AUXSRC(ALL1)
#define CLOCKS_CLK_REF_CTRL_SRC(v) (((v)&0x3)<<0)
#define CLOCKS_CLK_REF_CTRL_SRC_MASK CLOCKS_CLK_REF_CTRL_SRC(ALL1)

/*CLK_REF_DIV Register macros*/

#define CLOCKS_CLK_REF_DIV_INT(v) (((v)&0x3)<<8)
#define CLOCKS_CLK_REF_DIV_INT_MASK CLOCKS_CLK_REF_DIV_INT(ALL1)

/*CLK_REF_SELECTED Register macros*/


/*CLK_SYS_CTRL Register macros*/

#define CLOCKS_CLK_SYS_CTRL_AUXSRC(v) (((v)&0x7)<<5)
#define CLOCKS_CLK_SYS_CTRL_AUXSRC_MASK CLOCKS_CLK_SYS_CTRL_AUXSRC(ALL1)
#define CLOCKS_CLK_SYS_CTRL_SRC(v) (((v)&0x1)<<0)
#define CLOCKS_CLK_SYS_CTRL_SRC_MASK CLOCKS_CLK_SYS_CTRL_SRC(ALL1)

/*CLK_SYS_DIV Register macros*/

#define CLOCKS_CLK_SYS_DIV_INT(v) (((v)&0xffffff)<<8)
#define CLOCKS_CLK_SYS_DIV_INT_MASK CLOCKS_CLK_SYS_DIV_INT(ALL1)
#define CLOCKS_CLK_SYS_DIV_FRAC(v) (((v)&0xff)<<0)
#define CLOCKS_CLK_SYS_DIV_FRAC_MASK CLOCKS_CLK_SYS_DIV_FRAC(ALL1)

/*CLK_SYS_SELECTED Register macros*/


/*CLK_PERI_CTRL Register macros*/

#define CLOCKS_CLK_PERI_CTRL_ENABLE(v) (((v)&0x1)<<11)
#define CLOCKS_CLK_PERI_CTRL_ENABLE_MASK CLOCKS_CLK_PERI_CTRL_ENABLE(ALL1)
#define CLOCKS_CLK_PERI_CTRL_KILL(v) (((v)&0x1)<<10)
#define CLOCKS_CLK_PERI_CTRL_KILL_MASK CLOCKS_CLK_PERI_CTRL_KILL(ALL1)
#define CLOCKS_CLK_PERI_CTRL_AUXSRC(v) (((v)&0x7)<<5)
#define CLOCKS_CLK_PERI_CTRL_AUXSRC_MASK CLOCKS_CLK_PERI_CTRL_AUXSRC(ALL1)

/*CLK_PERI_SELECTED Register macros*/


/*CLK_USB_CTRL Register macros*/

#define CLOCKS_CLK_USB_CTRL_NUDGE(v) (((v)&0x1)<<20)
#define CLOCKS_CLK_USB_CTRL_NUDGE_MASK CLOCKS_CLK_USB_CTRL_NUDGE(ALL1)
#define CLOCKS_CLK_USB_CTRL_PHASE(v) (((v)&0x3)<<16)
#define CLOCKS_CLK_USB_CTRL_PHASE_MASK CLOCKS_CLK_USB_CTRL_PHASE(ALL1)
#define CLOCKS_CLK_USB_CTRL_ENABLE(v) (((v)&0x1)<<11)
#define CLOCKS_CLK_USB_CTRL_ENABLE_MASK CLOCKS_CLK_USB_CTRL_ENABLE(ALL1)
#define CLOCKS_CLK_USB_CTRL_KILL(v) (((v)&0x1)<<10)
#define CLOCKS_CLK_USB_CTRL_KILL_MASK CLOCKS_CLK_USB_CTRL_KILL(ALL1)
#define CLOCKS_CLK_USB_CTRL_AUXSRC(v) (((v)&0x7)<<5)
#define CLOCKS_CLK_USB_CTRL_AUXSRC_MASK CLOCKS_CLK_USB_CTRL_AUXSRC(ALL1)

/*CLK_USB_DIV Register macros*/

#define CLOCKS_CLK_USB_DIV_INT(v) (((v)&0x3)<<8)
#define CLOCKS_CLK_USB_DIV_INT_MASK CLOCKS_CLK_USB_DIV_INT(ALL1)

/*CLK_USB_SELECTED Register macros*/


/*CLK_ADC_CTRL Register macros*/

#define CLOCKS_CLK_ADC_CTRL_NUDGE(v) (((v)&0x1)<<20)
#define CLOCKS_CLK_ADC_CTRL_NUDGE_MASK CLOCKS_CLK_ADC_CTRL_NUDGE(ALL1)
#define CLOCKS_CLK_ADC_CTRL_PHASE(v) (((v)&0x3)<<16)
#define CLOCKS_CLK_ADC_CTRL_PHASE_MASK CLOCKS_CLK_ADC_CTRL_PHASE(ALL1)
#define CLOCKS_CLK_ADC_CTRL_ENABLE(v) (((v)&0x1)<<11)
#define CLOCKS_CLK_ADC_CTRL_ENABLE_MASK CLOCKS_CLK_ADC_CTRL_ENABLE(ALL1)
#define CLOCKS_CLK_ADC_CTRL_KILL(v) (((v)&0x1)<<10)
#define CLOCKS_CLK_ADC_CTRL_KILL_MASK CLOCKS_CLK_ADC_CTRL_KILL(ALL1)
#define CLOCKS_CLK_ADC_CTRL_AUXSRC(v) (((v)&0x7)<<5)
#define CLOCKS_CLK_ADC_CTRL_AUXSRC_MASK CLOCKS_CLK_ADC_CTRL_AUXSRC(ALL1)

/*CLK_ADC_DIV Register macros*/

#define CLOCKS_CLK_ADC_DIV_INT(v) (((v)&0x3)<<8)
#define CLOCKS_CLK_ADC_DIV_INT_MASK CLOCKS_CLK_ADC_DIV_INT(ALL1)

/*CLK_ADC_SELECTED Register macros*/


/*CLK_RTC_CTRL Register macros*/

#define CLOCKS_CLK_RTC_CTRL_NUDGE(v) (((v)&0x1)<<20)
#define CLOCKS_CLK_RTC_CTRL_NUDGE_MASK CLOCKS_CLK_RTC_CTRL_NUDGE(ALL1)
#define CLOCKS_CLK_RTC_CTRL_PHASE(v) (((v)&0x3)<<16)
#define CLOCKS_CLK_RTC_CTRL_PHASE_MASK CLOCKS_CLK_RTC_CTRL_PHASE(ALL1)
#define CLOCKS_CLK_RTC_CTRL_ENABLE(v) (((v)&0x1)<<11)
#define CLOCKS_CLK_RTC_CTRL_ENABLE_MASK CLOCKS_CLK_RTC_CTRL_ENABLE(ALL1)
#define CLOCKS_CLK_RTC_CTRL_KILL(v) (((v)&0x1)<<10)
#define CLOCKS_CLK_RTC_CTRL_KILL_MASK CLOCKS_CLK_RTC_CTRL_KILL(ALL1)
#define CLOCKS_CLK_RTC_CTRL_AUXSRC(v) (((v)&0x7)<<5)
#define CLOCKS_CLK_RTC_CTRL_AUXSRC_MASK CLOCKS_CLK_RTC_CTRL_AUXSRC(ALL1)

/*CLK_RTC_DIV Register macros*/

#define CLOCKS_CLK_RTC_DIV_INT(v) (((v)&0xffffff)<<8)
#define CLOCKS_CLK_RTC_DIV_INT_MASK CLOCKS_CLK_RTC_DIV_INT(ALL1)
#define CLOCKS_CLK_RTC_DIV_FRAC(v) (((v)&0xff)<<0)
#define CLOCKS_CLK_RTC_DIV_FRAC_MASK CLOCKS_CLK_RTC_DIV_FRAC(ALL1)

/*CLK_RTC_SELECTED Register macros*/


/*CLK_SYS_RESUS_CTRL Register macros*/

#define CLOCKS_CLK_SYS_RESUS_CTRL_CLEAR(v) (((v)&0x1)<<16)
#define CLOCKS_CLK_SYS_RESUS_CTRL_CLEAR_MASK CLOCKS_CLK_SYS_RESUS_CTRL_CLEAR(ALL1)
#define CLOCKS_CLK_SYS_RESUS_CTRL_FRCE(v) (((v)&0x1)<<12)
#define CLOCKS_CLK_SYS_RESUS_CTRL_FRCE_MASK CLOCKS_CLK_SYS_RESUS_CTRL_FRCE(ALL1)
#define CLOCKS_CLK_SYS_RESUS_CTRL_ENABLE(v) (((v)&0x1)<<8)
#define CLOCKS_CLK_SYS_RESUS_CTRL_ENABLE_MASK CLOCKS_CLK_SYS_RESUS_CTRL_ENABLE(ALL1)
#define CLOCKS_CLK_SYS_RESUS_CTRL_TIMEOUT(v) (((v)&0xff)<<0)
#define CLOCKS_CLK_SYS_RESUS_CTRL_TIMEOUT_MASK CLOCKS_CLK_SYS_RESUS_CTRL_TIMEOUT(ALL1)

/*CLK_SYS_RESUS_STATUS Register macros*/

#define CLOCKS_CLK_SYS_RESUS_STATUS_RESUSSED(v) (((v)&0x1)<<0)
#define CLOCKS_CLK_SYS_RESUS_STATUS_RESUSSED_MASK CLOCKS_CLK_SYS_RESUS_STATUS_RESUSSED(ALL1)

/*FC0_REF_KHZ Register macros*/


/*FC0_MIN_KHZ Register macros*/


/*FC0_MAX_KHZ Register macros*/


/*FC0_DELAY Register macros*/


/*FC0_INTERVAL Register macros*/


/*FC0_SRC Register macros*/


/*FC0_STATUS Register macros*/

#define CLOCKS_FC0_STATUS_DIED(v) (((v)&0x1)<<28)
#define CLOCKS_FC0_STATUS_DIED_MASK CLOCKS_FC0_STATUS_DIED(ALL1)
#define CLOCKS_FC0_STATUS_FAST(v) (((v)&0x1)<<24)
#define CLOCKS_FC0_STATUS_FAST_MASK CLOCKS_FC0_STATUS_FAST(ALL1)
#define CLOCKS_FC0_STATUS_SLOW(v) (((v)&0x1)<<20)
#define CLOCKS_FC0_STATUS_SLOW_MASK CLOCKS_FC0_STATUS_SLOW(ALL1)
#define CLOCKS_FC0_STATUS_FAIL(v) (((v)&0x1)<<16)
#define CLOCKS_FC0_STATUS_FAIL_MASK CLOCKS_FC0_STATUS_FAIL(ALL1)
#define CLOCKS_FC0_STATUS_WAITING(v) (((v)&0x1)<<12)
#define CLOCKS_FC0_STATUS_WAITING_MASK CLOCKS_FC0_STATUS_WAITING(ALL1)
#define CLOCKS_FC0_STATUS_RUNNING(v) (((v)&0x1)<<8)
#define CLOCKS_FC0_STATUS_RUNNING_MASK CLOCKS_FC0_STATUS_RUNNING(ALL1)
#define CLOCKS_FC0_STATUS_DONE(v) (((v)&0x1)<<4)
#define CLOCKS_FC0_STATUS_DONE_MASK CLOCKS_FC0_STATUS_DONE(ALL1)
#define CLOCKS_FC0_STATUS_PASS(v) (((v)&0x1)<<0)
#define CLOCKS_FC0_STATUS_PASS_MASK CLOCKS_FC0_STATUS_PASS(ALL1)

/*FC0_RESULT Register macros*/

#define CLOCKS_FC0_RESULT_KHZ(v) (((v)&0x1ffffff)<<5)
#define CLOCKS_FC0_RESULT_KHZ_MASK CLOCKS_FC0_RESULT_KHZ(ALL1)
#define CLOCKS_FC0_RESULT_FRAC(v) (((v)&0x1f)<<0)
#define CLOCKS_FC0_RESULT_FRAC_MASK CLOCKS_FC0_RESULT_FRAC(ALL1)

/*WAKE_EN0 Register macros*/

#define CLOCKS_WAKE_EN0_CLK_SYS_SRAM3(v) (((v)&0x1)<<31)
#define CLOCKS_WAKE_EN0_CLK_SYS_SRAM3_MASK CLOCKS_WAKE_EN0_CLK_SYS_SRAM3(ALL1)
#define CLOCKS_WAKE_EN0_CLK_SYS_SRAM2(v) (((v)&0x1)<<30)
#define CLOCKS_WAKE_EN0_CLK_SYS_SRAM2_MASK CLOCKS_WAKE_EN0_CLK_SYS_SRAM2(ALL1)
#define CLOCKS_WAKE_EN0_CLK_SYS_SRAM1(v) (((v)&0x1)<<29)
#define CLOCKS_WAKE_EN0_CLK_SYS_SRAM1_MASK CLOCKS_WAKE_EN0_CLK_SYS_SRAM1(ALL1)
#define CLOCKS_WAKE_EN0_CLK_SYS_SRAM0(v) (((v)&0x1)<<28)
#define CLOCKS_WAKE_EN0_CLK_SYS_SRAM0_MASK CLOCKS_WAKE_EN0_CLK_SYS_SRAM0(ALL1)
#define CLOCKS_WAKE_EN0_CLK_SYS_SPI1(v) (((v)&0x1)<<27)
#define CLOCKS_WAKE_EN0_CLK_SYS_SPI1_MASK CLOCKS_WAKE_EN0_CLK_SYS_SPI1(ALL1)
#define CLOCKS_WAKE_EN0_CLK_PERI_SPI1(v) (((v)&0x1)<<26)
#define CLOCKS_WAKE_EN0_CLK_PERI_SPI1_MASK CLOCKS_WAKE_EN0_CLK_PERI_SPI1(ALL1)
#define CLOCKS_WAKE_EN0_CLK_SYS_SPI0(v) (((v)&0x1)<<25)
#define CLOCKS_WAKE_EN0_CLK_SYS_SPI0_MASK CLOCKS_WAKE_EN0_CLK_SYS_SPI0(ALL1)
#define CLOCKS_WAKE_EN0_CLK_PERI_SPI0(v) (((v)&0x1)<<24)
#define CLOCKS_WAKE_EN0_CLK_PERI_SPI0_MASK CLOCKS_WAKE_EN0_CLK_PERI_SPI0(ALL1)
#define CLOCKS_WAKE_EN0_CLK_SYS_SIO(v) (((v)&0x1)<<23)
#define CLOCKS_WAKE_EN0_CLK_SYS_SIO_MASK CLOCKS_WAKE_EN0_CLK_SYS_SIO(ALL1)
#define CLOCKS_WAKE_EN0_CLK_SYS_RTC(v) (((v)&0x1)<<22)
#define CLOCKS_WAKE_EN0_CLK_SYS_RTC_MASK CLOCKS_WAKE_EN0_CLK_SYS_RTC(ALL1)
#define CLOCKS_WAKE_EN0_CLK_RTC_RTC(v) (((v)&0x1)<<21)
#define CLOCKS_WAKE_EN0_CLK_RTC_RTC_MASK CLOCKS_WAKE_EN0_CLK_RTC_RTC(ALL1)
#define CLOCKS_WAKE_EN0_CLK_SYS_ROSC(v) (((v)&0x1)<<20)
#define CLOCKS_WAKE_EN0_CLK_SYS_ROSC_MASK CLOCKS_WAKE_EN0_CLK_SYS_ROSC(ALL1)
#define CLOCKS_WAKE_EN0_CLK_SYS_ROM(v) (((v)&0x1)<<19)
#define CLOCKS_WAKE_EN0_CLK_SYS_ROM_MASK CLOCKS_WAKE_EN0_CLK_SYS_ROM(ALL1)
#define CLOCKS_WAKE_EN0_CLK_SYS_RESETS(v) (((v)&0x1)<<18)
#define CLOCKS_WAKE_EN0_CLK_SYS_RESETS_MASK CLOCKS_WAKE_EN0_CLK_SYS_RESETS(ALL1)
#define CLOCKS_WAKE_EN0_CLK_SYS_PWM(v) (((v)&0x1)<<17)
#define CLOCKS_WAKE_EN0_CLK_SYS_PWM_MASK CLOCKS_WAKE_EN0_CLK_SYS_PWM(ALL1)
#define CLOCKS_WAKE_EN0_CLK_SYS_PSM(v) (((v)&0x1)<<16)
#define CLOCKS_WAKE_EN0_CLK_SYS_PSM_MASK CLOCKS_WAKE_EN0_CLK_SYS_PSM(ALL1)
#define CLOCKS_WAKE_EN0_CLK_SYS_PLL_USB(v) (((v)&0x1)<<15)
#define CLOCKS_WAKE_EN0_CLK_SYS_PLL_USB_MASK CLOCKS_WAKE_EN0_CLK_SYS_PLL_USB(ALL1)
#define CLOCKS_WAKE_EN0_CLK_SYS_PLL_SYS(v) (((v)&0x1)<<14)
#define CLOCKS_WAKE_EN0_CLK_SYS_PLL_SYS_MASK CLOCKS_WAKE_EN0_CLK_SYS_PLL_SYS(ALL1)
#define CLOCKS_WAKE_EN0_CLK_SYS_PIO1(v) (((v)&0x1)<<13)
#define CLOCKS_WAKE_EN0_CLK_SYS_PIO1_MASK CLOCKS_WAKE_EN0_CLK_SYS_PIO1(ALL1)
#define CLOCKS_WAKE_EN0_CLK_SYS_PIO0(v) (((v)&0x1)<<12)
#define CLOCKS_WAKE_EN0_CLK_SYS_PIO0_MASK CLOCKS_WAKE_EN0_CLK_SYS_PIO0(ALL1)
#define CLOCKS_WAKE_EN0_CLK_SYS_PADS(v) (((v)&0x1)<<11)
#define CLOCKS_WAKE_EN0_CLK_SYS_PADS_MASK CLOCKS_WAKE_EN0_CLK_SYS_PADS(ALL1)
#define CLOCKS_WAKE_EN0_CLK_SYS_VREG_AND_CHIP_RESET(v) (((v)&0x1)<<10)
#define CLOCKS_WAKE_EN0_CLK_SYS_VREG_AND_CHIP_RESET_MASK CLOCKS_WAKE_EN0_CLK_SYS_VREG_AND_CHIP_RESET(ALL1)
#define CLOCKS_WAKE_EN0_CLK_SYS_JTAG(v) (((v)&0x1)<<9)
#define CLOCKS_WAKE_EN0_CLK_SYS_JTAG_MASK CLOCKS_WAKE_EN0_CLK_SYS_JTAG(ALL1)
#define CLOCKS_WAKE_EN0_CLK_SYS_IO(v) (((v)&0x1)<<8)
#define CLOCKS_WAKE_EN0_CLK_SYS_IO_MASK CLOCKS_WAKE_EN0_CLK_SYS_IO(ALL1)
#define CLOCKS_WAKE_EN0_CLK_SYS_I2C1(v) (((v)&0x1)<<7)
#define CLOCKS_WAKE_EN0_CLK_SYS_I2C1_MASK CLOCKS_WAKE_EN0_CLK_SYS_I2C1(ALL1)
#define CLOCKS_WAKE_EN0_CLK_SYS_I2C0(v) (((v)&0x1)<<6)
#define CLOCKS_WAKE_EN0_CLK_SYS_I2C0_MASK CLOCKS_WAKE_EN0_CLK_SYS_I2C0(ALL1)
#define CLOCKS_WAKE_EN0_CLK_SYS_DMA(v) (((v)&0x1)<<5)
#define CLOCKS_WAKE_EN0_CLK_SYS_DMA_MASK CLOCKS_WAKE_EN0_CLK_SYS_DMA(ALL1)
#define CLOCKS_WAKE_EN0_CLK_SYS_BUSFABRIC(v) (((v)&0x1)<<4)
#define CLOCKS_WAKE_EN0_CLK_SYS_BUSFABRIC_MASK CLOCKS_WAKE_EN0_CLK_SYS_BUSFABRIC(ALL1)
#define CLOCKS_WAKE_EN0_CLK_SYS_BUSCTRL(v) (((v)&0x1)<<3)
#define CLOCKS_WAKE_EN0_CLK_SYS_BUSCTRL_MASK CLOCKS_WAKE_EN0_CLK_SYS_BUSCTRL(ALL1)
#define CLOCKS_WAKE_EN0_CLK_SYS_ADC(v) (((v)&0x1)<<2)
#define CLOCKS_WAKE_EN0_CLK_SYS_ADC_MASK CLOCKS_WAKE_EN0_CLK_SYS_ADC(ALL1)
#define CLOCKS_WAKE_EN0_CLK_ADC_ADC(v) (((v)&0x1)<<1)
#define CLOCKS_WAKE_EN0_CLK_ADC_ADC_MASK CLOCKS_WAKE_EN0_CLK_ADC_ADC(ALL1)
#define CLOCKS_WAKE_EN0_CLK_SYS_CLOCKS(v) (((v)&0x1)<<0)
#define CLOCKS_WAKE_EN0_CLK_SYS_CLOCKS_MASK CLOCKS_WAKE_EN0_CLK_SYS_CLOCKS(ALL1)

/*WAKE_EN1 Register macros*/

#define CLOCKS_WAKE_EN1_CLK_SYS_XOSC(v) (((v)&0x1)<<14)
#define CLOCKS_WAKE_EN1_CLK_SYS_XOSC_MASK CLOCKS_WAKE_EN1_CLK_SYS_XOSC(ALL1)
#define CLOCKS_WAKE_EN1_CLK_SYS_XIP(v) (((v)&0x1)<<13)
#define CLOCKS_WAKE_EN1_CLK_SYS_XIP_MASK CLOCKS_WAKE_EN1_CLK_SYS_XIP(ALL1)
#define CLOCKS_WAKE_EN1_CLK_SYS_WATCHDOG(v) (((v)&0x1)<<12)
#define CLOCKS_WAKE_EN1_CLK_SYS_WATCHDOG_MASK CLOCKS_WAKE_EN1_CLK_SYS_WATCHDOG(ALL1)
#define CLOCKS_WAKE_EN1_CLK_USB_USBCTRL(v) (((v)&0x1)<<11)
#define CLOCKS_WAKE_EN1_CLK_USB_USBCTRL_MASK CLOCKS_WAKE_EN1_CLK_USB_USBCTRL(ALL1)
#define CLOCKS_WAKE_EN1_CLK_SYS_USBCTRL(v) (((v)&0x1)<<10)
#define CLOCKS_WAKE_EN1_CLK_SYS_USBCTRL_MASK CLOCKS_WAKE_EN1_CLK_SYS_USBCTRL(ALL1)
#define CLOCKS_WAKE_EN1_CLK_SYS_UART1(v) (((v)&0x1)<<9)
#define CLOCKS_WAKE_EN1_CLK_SYS_UART1_MASK CLOCKS_WAKE_EN1_CLK_SYS_UART1(ALL1)
#define CLOCKS_WAKE_EN1_CLK_PERI_UART1(v) (((v)&0x1)<<8)
#define CLOCKS_WAKE_EN1_CLK_PERI_UART1_MASK CLOCKS_WAKE_EN1_CLK_PERI_UART1(ALL1)
#define CLOCKS_WAKE_EN1_CLK_SYS_UART0(v) (((v)&0x1)<<7)
#define CLOCKS_WAKE_EN1_CLK_SYS_UART0_MASK CLOCKS_WAKE_EN1_CLK_SYS_UART0(ALL1)
#define CLOCKS_WAKE_EN1_CLK_PERI_UART0(v) (((v)&0x1)<<6)
#define CLOCKS_WAKE_EN1_CLK_PERI_UART0_MASK CLOCKS_WAKE_EN1_CLK_PERI_UART0(ALL1)
#define CLOCKS_WAKE_EN1_CLK_SYS_TIMER(v) (((v)&0x1)<<5)
#define CLOCKS_WAKE_EN1_CLK_SYS_TIMER_MASK CLOCKS_WAKE_EN1_CLK_SYS_TIMER(ALL1)
#define CLOCKS_WAKE_EN1_CLK_SYS_TBMAN(v) (((v)&0x1)<<4)
#define CLOCKS_WAKE_EN1_CLK_SYS_TBMAN_MASK CLOCKS_WAKE_EN1_CLK_SYS_TBMAN(ALL1)
#define CLOCKS_WAKE_EN1_CLK_SYS_SYSINFO(v) (((v)&0x1)<<3)
#define CLOCKS_WAKE_EN1_CLK_SYS_SYSINFO_MASK CLOCKS_WAKE_EN1_CLK_SYS_SYSINFO(ALL1)
#define CLOCKS_WAKE_EN1_CLK_SYS_SYSCFG(v) (((v)&0x1)<<2)
#define CLOCKS_WAKE_EN1_CLK_SYS_SYSCFG_MASK CLOCKS_WAKE_EN1_CLK_SYS_SYSCFG(ALL1)
#define CLOCKS_WAKE_EN1_CLK_SYS_SRAM5(v) (((v)&0x1)<<1)
#define CLOCKS_WAKE_EN1_CLK_SYS_SRAM5_MASK CLOCKS_WAKE_EN1_CLK_SYS_SRAM5(ALL1)
#define CLOCKS_WAKE_EN1_CLK_SYS_SRAM4(v) (((v)&0x1)<<0)
#define CLOCKS_WAKE_EN1_CLK_SYS_SRAM4_MASK CLOCKS_WAKE_EN1_CLK_SYS_SRAM4(ALL1)

/*SLEEP_EN0 Register macros*/

#define CLOCKS_SLEEP_EN0_CLK_SYS_SRAM3(v) (((v)&0x1)<<31)
#define CLOCKS_SLEEP_EN0_CLK_SYS_SRAM3_MASK CLOCKS_SLEEP_EN0_CLK_SYS_SRAM3(ALL1)
#define CLOCKS_SLEEP_EN0_CLK_SYS_SRAM2(v) (((v)&0x1)<<30)
#define CLOCKS_SLEEP_EN0_CLK_SYS_SRAM2_MASK CLOCKS_SLEEP_EN0_CLK_SYS_SRAM2(ALL1)
#define CLOCKS_SLEEP_EN0_CLK_SYS_SRAM1(v) (((v)&0x1)<<29)
#define CLOCKS_SLEEP_EN0_CLK_SYS_SRAM1_MASK CLOCKS_SLEEP_EN0_CLK_SYS_SRAM1(ALL1)
#define CLOCKS_SLEEP_EN0_CLK_SYS_SRAM0(v) (((v)&0x1)<<28)
#define CLOCKS_SLEEP_EN0_CLK_SYS_SRAM0_MASK CLOCKS_SLEEP_EN0_CLK_SYS_SRAM0(ALL1)
#define CLOCKS_SLEEP_EN0_CLK_SYS_SPI1(v) (((v)&0x1)<<27)
#define CLOCKS_SLEEP_EN0_CLK_SYS_SPI1_MASK CLOCKS_SLEEP_EN0_CLK_SYS_SPI1(ALL1)
#define CLOCKS_SLEEP_EN0_CLK_PERI_SPI1(v) (((v)&0x1)<<26)
#define CLOCKS_SLEEP_EN0_CLK_PERI_SPI1_MASK CLOCKS_SLEEP_EN0_CLK_PERI_SPI1(ALL1)
#define CLOCKS_SLEEP_EN0_CLK_SYS_SPI0(v) (((v)&0x1)<<25)
#define CLOCKS_SLEEP_EN0_CLK_SYS_SPI0_MASK CLOCKS_SLEEP_EN0_CLK_SYS_SPI0(ALL1)
#define CLOCKS_SLEEP_EN0_CLK_PERI_SPI0(v) (((v)&0x1)<<24)
#define CLOCKS_SLEEP_EN0_CLK_PERI_SPI0_MASK CLOCKS_SLEEP_EN0_CLK_PERI_SPI0(ALL1)
#define CLOCKS_SLEEP_EN0_CLK_SYS_SIO(v) (((v)&0x1)<<23)
#define CLOCKS_SLEEP_EN0_CLK_SYS_SIO_MASK CLOCKS_SLEEP_EN0_CLK_SYS_SIO(ALL1)
#define CLOCKS_SLEEP_EN0_CLK_SYS_RTC(v) (((v)&0x1)<<22)
#define CLOCKS_SLEEP_EN0_CLK_SYS_RTC_MASK CLOCKS_SLEEP_EN0_CLK_SYS_RTC(ALL1)
#define CLOCKS_SLEEP_EN0_CLK_RTC_RTC(v) (((v)&0x1)<<21)
#define CLOCKS_SLEEP_EN0_CLK_RTC_RTC_MASK CLOCKS_SLEEP_EN0_CLK_RTC_RTC(ALL1)
#define CLOCKS_SLEEP_EN0_CLK_SYS_ROSC(v) (((v)&0x1)<<20)
#define CLOCKS_SLEEP_EN0_CLK_SYS_ROSC_MASK CLOCKS_SLEEP_EN0_CLK_SYS_ROSC(ALL1)
#define CLOCKS_SLEEP_EN0_CLK_SYS_ROM(v) (((v)&0x1)<<19)
#define CLOCKS_SLEEP_EN0_CLK_SYS_ROM_MASK CLOCKS_SLEEP_EN0_CLK_SYS_ROM(ALL1)
#define CLOCKS_SLEEP_EN0_CLK_SYS_RESETS(v) (((v)&0x1)<<18)
#define CLOCKS_SLEEP_EN0_CLK_SYS_RESETS_MASK CLOCKS_SLEEP_EN0_CLK_SYS_RESETS(ALL1)
#define CLOCKS_SLEEP_EN0_CLK_SYS_PWM(v) (((v)&0x1)<<17)
#define CLOCKS_SLEEP_EN0_CLK_SYS_PWM_MASK CLOCKS_SLEEP_EN0_CLK_SYS_PWM(ALL1)
#define CLOCKS_SLEEP_EN0_CLK_SYS_PSM(v) (((v)&0x1)<<16)
#define CLOCKS_SLEEP_EN0_CLK_SYS_PSM_MASK CLOCKS_SLEEP_EN0_CLK_SYS_PSM(ALL1)
#define CLOCKS_SLEEP_EN0_CLK_SYS_PLL_USB(v) (((v)&0x1)<<15)
#define CLOCKS_SLEEP_EN0_CLK_SYS_PLL_USB_MASK CLOCKS_SLEEP_EN0_CLK_SYS_PLL_USB(ALL1)
#define CLOCKS_SLEEP_EN0_CLK_SYS_PLL_SYS(v) (((v)&0x1)<<14)
#define CLOCKS_SLEEP_EN0_CLK_SYS_PLL_SYS_MASK CLOCKS_SLEEP_EN0_CLK_SYS_PLL_SYS(ALL1)
#define CLOCKS_SLEEP_EN0_CLK_SYS_PIO1(v) (((v)&0x1)<<13)
#define CLOCKS_SLEEP_EN0_CLK_SYS_PIO1_MASK CLOCKS_SLEEP_EN0_CLK_SYS_PIO1(ALL1)
#define CLOCKS_SLEEP_EN0_CLK_SYS_PIO0(v) (((v)&0x1)<<12)
#define CLOCKS_SLEEP_EN0_CLK_SYS_PIO0_MASK CLOCKS_SLEEP_EN0_CLK_SYS_PIO0(ALL1)
#define CLOCKS_SLEEP_EN0_CLK_SYS_PADS(v) (((v)&0x1)<<11)
#define CLOCKS_SLEEP_EN0_CLK_SYS_PADS_MASK CLOCKS_SLEEP_EN0_CLK_SYS_PADS(ALL1)
#define CLOCKS_SLEEP_EN0_CLK_SYS_VREG_AND_CHIP_RESET(v) (((v)&0x1)<<10)
#define CLOCKS_SLEEP_EN0_CLK_SYS_VREG_AND_CHIP_RESET_MASK CLOCKS_SLEEP_EN0_CLK_SYS_VREG_AND_CHIP_RESET(ALL1)
#define CLOCKS_SLEEP_EN0_CLK_SYS_JTAG(v) (((v)&0x1)<<9)
#define CLOCKS_SLEEP_EN0_CLK_SYS_JTAG_MASK CLOCKS_SLEEP_EN0_CLK_SYS_JTAG(ALL1)
#define CLOCKS_SLEEP_EN0_CLK_SYS_IO(v) (((v)&0x1)<<8)
#define CLOCKS_SLEEP_EN0_CLK_SYS_IO_MASK CLOCKS_SLEEP_EN0_CLK_SYS_IO(ALL1)
#define CLOCKS_SLEEP_EN0_CLK_SYS_I2C1(v) (((v)&0x1)<<7)
#define CLOCKS_SLEEP_EN0_CLK_SYS_I2C1_MASK CLOCKS_SLEEP_EN0_CLK_SYS_I2C1(ALL1)
#define CLOCKS_SLEEP_EN0_CLK_SYS_I2C0(v) (((v)&0x1)<<6)
#define CLOCKS_SLEEP_EN0_CLK_SYS_I2C0_MASK CLOCKS_SLEEP_EN0_CLK_SYS_I2C0(ALL1)
#define CLOCKS_SLEEP_EN0_CLK_SYS_DMA(v) (((v)&0x1)<<5)
#define CLOCKS_SLEEP_EN0_CLK_SYS_DMA_MASK CLOCKS_SLEEP_EN0_CLK_SYS_DMA(ALL1)
#define CLOCKS_SLEEP_EN0_CLK_SYS_BUSFABRIC(v) (((v)&0x1)<<4)
#define CLOCKS_SLEEP_EN0_CLK_SYS_BUSFABRIC_MASK CLOCKS_SLEEP_EN0_CLK_SYS_BUSFABRIC(ALL1)
#define CLOCKS_SLEEP_EN0_CLK_SYS_BUSCTRL(v) (((v)&0x1)<<3)
#define CLOCKS_SLEEP_EN0_CLK_SYS_BUSCTRL_MASK CLOCKS_SLEEP_EN0_CLK_SYS_BUSCTRL(ALL1)
#define CLOCKS_SLEEP_EN0_CLK_SYS_ADC(v) (((v)&0x1)<<2)
#define CLOCKS_SLEEP_EN0_CLK_SYS_ADC_MASK CLOCKS_SLEEP_EN0_CLK_SYS_ADC(ALL1)
#define CLOCKS_SLEEP_EN0_CLK_ADC_ADC(v) (((v)&0x1)<<1)
#define CLOCKS_SLEEP_EN0_CLK_ADC_ADC_MASK CLOCKS_SLEEP_EN0_CLK_ADC_ADC(ALL1)
#define CLOCKS_SLEEP_EN0_CLK_SYS_CLOCKS(v) (((v)&0x1)<<0)
#define CLOCKS_SLEEP_EN0_CLK_SYS_CLOCKS_MASK CLOCKS_SLEEP_EN0_CLK_SYS_CLOCKS(ALL1)

/*SLEEP_EN1 Register macros*/

#define CLOCKS_SLEEP_EN1_CLK_SYS_XOSC(v) (((v)&0x1)<<14)
#define CLOCKS_SLEEP_EN1_CLK_SYS_XOSC_MASK CLOCKS_SLEEP_EN1_CLK_SYS_XOSC(ALL1)
#define CLOCKS_SLEEP_EN1_CLK_SYS_XIP(v) (((v)&0x1)<<13)
#define CLOCKS_SLEEP_EN1_CLK_SYS_XIP_MASK CLOCKS_SLEEP_EN1_CLK_SYS_XIP(ALL1)
#define CLOCKS_SLEEP_EN1_CLK_SYS_WATCHDOG(v) (((v)&0x1)<<12)
#define CLOCKS_SLEEP_EN1_CLK_SYS_WATCHDOG_MASK CLOCKS_SLEEP_EN1_CLK_SYS_WATCHDOG(ALL1)
#define CLOCKS_SLEEP_EN1_CLK_USB_USBCTRL(v) (((v)&0x1)<<11)
#define CLOCKS_SLEEP_EN1_CLK_USB_USBCTRL_MASK CLOCKS_SLEEP_EN1_CLK_USB_USBCTRL(ALL1)
#define CLOCKS_SLEEP_EN1_CLK_SYS_USBCTRL(v) (((v)&0x1)<<10)
#define CLOCKS_SLEEP_EN1_CLK_SYS_USBCTRL_MASK CLOCKS_SLEEP_EN1_CLK_SYS_USBCTRL(ALL1)
#define CLOCKS_SLEEP_EN1_CLK_SYS_UART1(v) (((v)&0x1)<<9)
#define CLOCKS_SLEEP_EN1_CLK_SYS_UART1_MASK CLOCKS_SLEEP_EN1_CLK_SYS_UART1(ALL1)
#define CLOCKS_SLEEP_EN1_CLK_PERI_UART1(v) (((v)&0x1)<<8)
#define CLOCKS_SLEEP_EN1_CLK_PERI_UART1_MASK CLOCKS_SLEEP_EN1_CLK_PERI_UART1(ALL1)
#define CLOCKS_SLEEP_EN1_CLK_SYS_UART0(v) (((v)&0x1)<<7)
#define CLOCKS_SLEEP_EN1_CLK_SYS_UART0_MASK CLOCKS_SLEEP_EN1_CLK_SYS_UART0(ALL1)
#define CLOCKS_SLEEP_EN1_CLK_PERI_UART0(v) (((v)&0x1)<<6)
#define CLOCKS_SLEEP_EN1_CLK_PERI_UART0_MASK CLOCKS_SLEEP_EN1_CLK_PERI_UART0(ALL1)
#define CLOCKS_SLEEP_EN1_CLK_SYS_TIMER(v) (((v)&0x1)<<5)
#define CLOCKS_SLEEP_EN1_CLK_SYS_TIMER_MASK CLOCKS_SLEEP_EN1_CLK_SYS_TIMER(ALL1)
#define CLOCKS_SLEEP_EN1_CLK_SYS_TBMAN(v) (((v)&0x1)<<4)
#define CLOCKS_SLEEP_EN1_CLK_SYS_TBMAN_MASK CLOCKS_SLEEP_EN1_CLK_SYS_TBMAN(ALL1)
#define CLOCKS_SLEEP_EN1_CLK_SYS_SYSINFO(v) (((v)&0x1)<<3)
#define CLOCKS_SLEEP_EN1_CLK_SYS_SYSINFO_MASK CLOCKS_SLEEP_EN1_CLK_SYS_SYSINFO(ALL1)
#define CLOCKS_SLEEP_EN1_CLK_SYS_SYSCFG(v) (((v)&0x1)<<2)
#define CLOCKS_SLEEP_EN1_CLK_SYS_SYSCFG_MASK CLOCKS_SLEEP_EN1_CLK_SYS_SYSCFG(ALL1)
#define CLOCKS_SLEEP_EN1_CLK_SYS_SRAM5(v) (((v)&0x1)<<1)
#define CLOCKS_SLEEP_EN1_CLK_SYS_SRAM5_MASK CLOCKS_SLEEP_EN1_CLK_SYS_SRAM5(ALL1)
#define CLOCKS_SLEEP_EN1_CLK_SYS_SRAM4(v) (((v)&0x1)<<0)
#define CLOCKS_SLEEP_EN1_CLK_SYS_SRAM4_MASK CLOCKS_SLEEP_EN1_CLK_SYS_SRAM4(ALL1)

/*ENABLED0 Register macros*/

#define CLOCKS_ENABLED0_CLK_SYS_SRAM3(v) (((v)&0x1)<<31)
#define CLOCKS_ENABLED0_CLK_SYS_SRAM3_MASK CLOCKS_ENABLED0_CLK_SYS_SRAM3(ALL1)
#define CLOCKS_ENABLED0_CLK_SYS_SRAM2(v) (((v)&0x1)<<30)
#define CLOCKS_ENABLED0_CLK_SYS_SRAM2_MASK CLOCKS_ENABLED0_CLK_SYS_SRAM2(ALL1)
#define CLOCKS_ENABLED0_CLK_SYS_SRAM1(v) (((v)&0x1)<<29)
#define CLOCKS_ENABLED0_CLK_SYS_SRAM1_MASK CLOCKS_ENABLED0_CLK_SYS_SRAM1(ALL1)
#define CLOCKS_ENABLED0_CLK_SYS_SRAM0(v) (((v)&0x1)<<28)
#define CLOCKS_ENABLED0_CLK_SYS_SRAM0_MASK CLOCKS_ENABLED0_CLK_SYS_SRAM0(ALL1)
#define CLOCKS_ENABLED0_CLK_SYS_SPI1(v) (((v)&0x1)<<27)
#define CLOCKS_ENABLED0_CLK_SYS_SPI1_MASK CLOCKS_ENABLED0_CLK_SYS_SPI1(ALL1)
#define CLOCKS_ENABLED0_CLK_PERI_SPI1(v) (((v)&0x1)<<26)
#define CLOCKS_ENABLED0_CLK_PERI_SPI1_MASK CLOCKS_ENABLED0_CLK_PERI_SPI1(ALL1)
#define CLOCKS_ENABLED0_CLK_SYS_SPI0(v) (((v)&0x1)<<25)
#define CLOCKS_ENABLED0_CLK_SYS_SPI0_MASK CLOCKS_ENABLED0_CLK_SYS_SPI0(ALL1)
#define CLOCKS_ENABLED0_CLK_PERI_SPI0(v) (((v)&0x1)<<24)
#define CLOCKS_ENABLED0_CLK_PERI_SPI0_MASK CLOCKS_ENABLED0_CLK_PERI_SPI0(ALL1)
#define CLOCKS_ENABLED0_CLK_SYS_SIO(v) (((v)&0x1)<<23)
#define CLOCKS_ENABLED0_CLK_SYS_SIO_MASK CLOCKS_ENABLED0_CLK_SYS_SIO(ALL1)
#define CLOCKS_ENABLED0_CLK_SYS_RTC(v) (((v)&0x1)<<22)
#define CLOCKS_ENABLED0_CLK_SYS_RTC_MASK CLOCKS_ENABLED0_CLK_SYS_RTC(ALL1)
#define CLOCKS_ENABLED0_CLK_RTC_RTC(v) (((v)&0x1)<<21)
#define CLOCKS_ENABLED0_CLK_RTC_RTC_MASK CLOCKS_ENABLED0_CLK_RTC_RTC(ALL1)
#define CLOCKS_ENABLED0_CLK_SYS_ROSC(v) (((v)&0x1)<<20)
#define CLOCKS_ENABLED0_CLK_SYS_ROSC_MASK CLOCKS_ENABLED0_CLK_SYS_ROSC(ALL1)
#define CLOCKS_ENABLED0_CLK_SYS_ROM(v) (((v)&0x1)<<19)
#define CLOCKS_ENABLED0_CLK_SYS_ROM_MASK CLOCKS_ENABLED0_CLK_SYS_ROM(ALL1)
#define CLOCKS_ENABLED0_CLK_SYS_RESETS(v) (((v)&0x1)<<18)
#define CLOCKS_ENABLED0_CLK_SYS_RESETS_MASK CLOCKS_ENABLED0_CLK_SYS_RESETS(ALL1)
#define CLOCKS_ENABLED0_CLK_SYS_PWM(v) (((v)&0x1)<<17)
#define CLOCKS_ENABLED0_CLK_SYS_PWM_MASK CLOCKS_ENABLED0_CLK_SYS_PWM(ALL1)
#define CLOCKS_ENABLED0_CLK_SYS_PSM(v) (((v)&0x1)<<16)
#define CLOCKS_ENABLED0_CLK_SYS_PSM_MASK CLOCKS_ENABLED0_CLK_SYS_PSM(ALL1)
#define CLOCKS_ENABLED0_CLK_SYS_PLL_USB(v) (((v)&0x1)<<15)
#define CLOCKS_ENABLED0_CLK_SYS_PLL_USB_MASK CLOCKS_ENABLED0_CLK_SYS_PLL_USB(ALL1)
#define CLOCKS_ENABLED0_CLK_SYS_PLL_SYS(v) (((v)&0x1)<<14)
#define CLOCKS_ENABLED0_CLK_SYS_PLL_SYS_MASK CLOCKS_ENABLED0_CLK_SYS_PLL_SYS(ALL1)
#define CLOCKS_ENABLED0_CLK_SYS_PIO1(v) (((v)&0x1)<<13)
#define CLOCKS_ENABLED0_CLK_SYS_PIO1_MASK CLOCKS_ENABLED0_CLK_SYS_PIO1(ALL1)
#define CLOCKS_ENABLED0_CLK_SYS_PIO0(v) (((v)&0x1)<<12)
#define CLOCKS_ENABLED0_CLK_SYS_PIO0_MASK CLOCKS_ENABLED0_CLK_SYS_PIO0(ALL1)
#define CLOCKS_ENABLED0_CLK_SYS_PADS(v) (((v)&0x1)<<11)
#define CLOCKS_ENABLED0_CLK_SYS_PADS_MASK CLOCKS_ENABLED0_CLK_SYS_PADS(ALL1)
#define CLOCKS_ENABLED0_CLK_SYS_VREG_AND_CHIP_RESET(v) (((v)&0x1)<<10)
#define CLOCKS_ENABLED0_CLK_SYS_VREG_AND_CHIP_RESET_MASK CLOCKS_ENABLED0_CLK_SYS_VREG_AND_CHIP_RESET(ALL1)
#define CLOCKS_ENABLED0_CLK_SYS_JTAG(v) (((v)&0x1)<<9)
#define CLOCKS_ENABLED0_CLK_SYS_JTAG_MASK CLOCKS_ENABLED0_CLK_SYS_JTAG(ALL1)
#define CLOCKS_ENABLED0_CLK_SYS_IO(v) (((v)&0x1)<<8)
#define CLOCKS_ENABLED0_CLK_SYS_IO_MASK CLOCKS_ENABLED0_CLK_SYS_IO(ALL1)
#define CLOCKS_ENABLED0_CLK_SYS_I2C1(v) (((v)&0x1)<<7)
#define CLOCKS_ENABLED0_CLK_SYS_I2C1_MASK CLOCKS_ENABLED0_CLK_SYS_I2C1(ALL1)
#define CLOCKS_ENABLED0_CLK_SYS_I2C0(v) (((v)&0x1)<<6)
#define CLOCKS_ENABLED0_CLK_SYS_I2C0_MASK CLOCKS_ENABLED0_CLK_SYS_I2C0(ALL1)
#define CLOCKS_ENABLED0_CLK_SYS_DMA(v) (((v)&0x1)<<5)
#define CLOCKS_ENABLED0_CLK_SYS_DMA_MASK CLOCKS_ENABLED0_CLK_SYS_DMA(ALL1)
#define CLOCKS_ENABLED0_CLK_SYS_BUSFABRIC(v) (((v)&0x1)<<4)
#define CLOCKS_ENABLED0_CLK_SYS_BUSFABRIC_MASK CLOCKS_ENABLED0_CLK_SYS_BUSFABRIC(ALL1)
#define CLOCKS_ENABLED0_CLK_SYS_BUSCTRL(v) (((v)&0x1)<<3)
#define CLOCKS_ENABLED0_CLK_SYS_BUSCTRL_MASK CLOCKS_ENABLED0_CLK_SYS_BUSCTRL(ALL1)
#define CLOCKS_ENABLED0_CLK_SYS_ADC(v) (((v)&0x1)<<2)
#define CLOCKS_ENABLED0_CLK_SYS_ADC_MASK CLOCKS_ENABLED0_CLK_SYS_ADC(ALL1)
#define CLOCKS_ENABLED0_CLK_ADC_ADC(v) (((v)&0x1)<<1)
#define CLOCKS_ENABLED0_CLK_ADC_ADC_MASK CLOCKS_ENABLED0_CLK_ADC_ADC(ALL1)
#define CLOCKS_ENABLED0_CLK_SYS_CLOCKS(v) (((v)&0x1)<<0)
#define CLOCKS_ENABLED0_CLK_SYS_CLOCKS_MASK CLOCKS_ENABLED0_CLK_SYS_CLOCKS(ALL1)

/*ENABLED1 Register macros*/

#define CLOCKS_ENABLED1_CLK_SYS_XOSC(v) (((v)&0x1)<<14)
#define CLOCKS_ENABLED1_CLK_SYS_XOSC_MASK CLOCKS_ENABLED1_CLK_SYS_XOSC(ALL1)
#define CLOCKS_ENABLED1_CLK_SYS_XIP(v) (((v)&0x1)<<13)
#define CLOCKS_ENABLED1_CLK_SYS_XIP_MASK CLOCKS_ENABLED1_CLK_SYS_XIP(ALL1)
#define CLOCKS_ENABLED1_CLK_SYS_WATCHDOG(v) (((v)&0x1)<<12)
#define CLOCKS_ENABLED1_CLK_SYS_WATCHDOG_MASK CLOCKS_ENABLED1_CLK_SYS_WATCHDOG(ALL1)
#define CLOCKS_ENABLED1_CLK_USB_USBCTRL(v) (((v)&0x1)<<11)
#define CLOCKS_ENABLED1_CLK_USB_USBCTRL_MASK CLOCKS_ENABLED1_CLK_USB_USBCTRL(ALL1)
#define CLOCKS_ENABLED1_CLK_SYS_USBCTRL(v) (((v)&0x1)<<10)
#define CLOCKS_ENABLED1_CLK_SYS_USBCTRL_MASK CLOCKS_ENABLED1_CLK_SYS_USBCTRL(ALL1)
#define CLOCKS_ENABLED1_CLK_SYS_UART1(v) (((v)&0x1)<<9)
#define CLOCKS_ENABLED1_CLK_SYS_UART1_MASK CLOCKS_ENABLED1_CLK_SYS_UART1(ALL1)
#define CLOCKS_ENABLED1_CLK_PERI_UART1(v) (((v)&0x1)<<8)
#define CLOCKS_ENABLED1_CLK_PERI_UART1_MASK CLOCKS_ENABLED1_CLK_PERI_UART1(ALL1)
#define CLOCKS_ENABLED1_CLK_SYS_UART0(v) (((v)&0x1)<<7)
#define CLOCKS_ENABLED1_CLK_SYS_UART0_MASK CLOCKS_ENABLED1_CLK_SYS_UART0(ALL1)
#define CLOCKS_ENABLED1_CLK_PERI_UART0(v) (((v)&0x1)<<6)
#define CLOCKS_ENABLED1_CLK_PERI_UART0_MASK CLOCKS_ENABLED1_CLK_PERI_UART0(ALL1)
#define CLOCKS_ENABLED1_CLK_SYS_TIMER(v) (((v)&0x1)<<5)
#define CLOCKS_ENABLED1_CLK_SYS_TIMER_MASK CLOCKS_ENABLED1_CLK_SYS_TIMER(ALL1)
#define CLOCKS_ENABLED1_CLK_SYS_TBMAN(v) (((v)&0x1)<<4)
#define CLOCKS_ENABLED1_CLK_SYS_TBMAN_MASK CLOCKS_ENABLED1_CLK_SYS_TBMAN(ALL1)
#define CLOCKS_ENABLED1_CLK_SYS_SYSINFO(v) (((v)&0x1)<<3)
#define CLOCKS_ENABLED1_CLK_SYS_SYSINFO_MASK CLOCKS_ENABLED1_CLK_SYS_SYSINFO(ALL1)
#define CLOCKS_ENABLED1_CLK_SYS_SYSCFG(v) (((v)&0x1)<<2)
#define CLOCKS_ENABLED1_CLK_SYS_SYSCFG_MASK CLOCKS_ENABLED1_CLK_SYS_SYSCFG(ALL1)
#define CLOCKS_ENABLED1_CLK_SYS_SRAM5(v) (((v)&0x1)<<1)
#define CLOCKS_ENABLED1_CLK_SYS_SRAM5_MASK CLOCKS_ENABLED1_CLK_SYS_SRAM5(ALL1)
#define CLOCKS_ENABLED1_CLK_SYS_SRAM4(v) (((v)&0x1)<<0)
#define CLOCKS_ENABLED1_CLK_SYS_SRAM4_MASK CLOCKS_ENABLED1_CLK_SYS_SRAM4(ALL1)

/*INTR Register macros*/

#define CLOCKS_INTR_CLK_SYS_RESUS(v) (((v)&0x1)<<0)
#define CLOCKS_INTR_CLK_SYS_RESUS_MASK CLOCKS_INTR_CLK_SYS_RESUS(ALL1)

/*INTE Register macros*/

#define CLOCKS_INTE_CLK_SYS_RESUS(v) (((v)&0x1)<<0)
#define CLOCKS_INTE_CLK_SYS_RESUS_MASK CLOCKS_INTE_CLK_SYS_RESUS(ALL1)

/*INTF Register macros*/

#define CLOCKS_INTF_CLK_SYS_RESUS(v) (((v)&0x1)<<0)
#define CLOCKS_INTF_CLK_SYS_RESUS_MASK CLOCKS_INTF_CLK_SYS_RESUS(ALL1)

/*INTS Register macros*/

#define CLOCKS_INTS_CLK_SYS_RESUS(v) (((v)&0x1)<<0)
#define CLOCKS_INTS_CLK_SYS_RESUS_MASK CLOCKS_INTS_CLK_SYS_RESUS(ALL1)

#endif